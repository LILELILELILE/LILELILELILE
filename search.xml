<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>搭建Hexo博客过程</title>
    <url>/2020/07/23/test/</url>
    <content><![CDATA[<p>#Hexo介绍</p>
<blockquote>
<p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 <a href="http://daringfireball.net/projects/markdown/" target="_blank" rel="noopener">Markdown</a>（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。<br>　　　　　　　　　　　　　　　　　　——Hexo主页<a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">https://hexo.io/zh-cn/</a></p>
</blockquote>
<p>#准备环境<br>###１.Node.js的安装和配置<br>　　Node.js是一个Javascript运行环境(runtime environment)，是一个让 JavaScript 运行在服务端的开发平台，让 JavaScript 成为与PHP、Python、Perl、Ruby等服务端语言平起平坐的脚本语言。</p>
<p>step1:下载<br>　　下载地址：<a href="https://nodejs.org/zh-cn/download/" target="_blank" rel="noopener">https://nodejs.org/zh-cn/download/</a>，下载安装包文件。<br><img src="https://upload-images.jianshu.io/upload_images/17593398-5f39c7a55d50138e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/500" alt="Node.js下载界面"><br>注：不要安装太新的或太旧的版本。</p>
<blockquote>
<p>安装包文件（.msi）：可以安装、修改、卸载所安装的程序<br>二进制文件（.zip）：下载后解压即可使用</p>
</blockquote>
<p>step2:安装<br>　　在安装模式这一步，不改变默认设置（全选）：</p>
<blockquote>
<p>Node.js runtime 表示运行环境<br>npm package manager表示npm包管理器<br>online documentation shortcuts 在线文档快捷方式<br>Add to PATH添加到环境变量</p>
</blockquote>
<p>step3：检验是否安装成功：<br>　　1.查看 计算机-属性-高级系统设置-环境变量-path-编辑 ，可以看到node程序已经被加入全局变量。<br><img src="https://upload-images.jianshu.io/upload_images/17593398-9f5688ce025b7888.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/500" alt="node已加入全局变量"><br>　　2.打开命令行工具，输入<code>node --version</code>，可以看到node.js的版本。</p>
<p>###2.安装Git<br>step1:下载<br>　　官网下载地址：<a href="https://git-scm.com/downloads" target="_blank" rel="noopener">https://git-scm.com/downloads</a>（但是下载速度非常非常慢，不建议……，下面会提供两个更快速的下载网址）<br><img src="https://upload-images.jianshu.io/upload_images/17593398-28bdb0ad81dbb2d3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/500" alt="git下载界面"><br>git下载网址1：<a href="http://apache.soxinyang.com/#/down/adb546cc9830db6735ce4c0b9d2ec133" target="_blank" rel="noopener">http://apache.soxinyang.com/#/down/adb546cc9830db6735ce4c0b9d2ec133</a><br>git下载网址2：<br><a href="https://npm.taobao.org/mirrors/git-for-windows/" target="_blank" rel="noopener">https://npm.taobao.org/mirrors/git-for-windows/</a><br>step2:安装<br>　　按照提示安装。<br>       修改Git Bash的默认启动路径的方法：<a href="https://blog.csdn.net/engineerxin/article/details/81041846" target="_blank" rel="noopener">https://blog.csdn.net/engineerxin/article/details/81041846</a><br>###3.安装Hexo<br>（后来发现以下步骤中我所谓的“在git bash中运行xxx指令”，事实上却都是在git cmd的界面中运行的。。。问题不大，只是在git cmd中运行指令不需要加<code>$</code>罢了。<br>Git GUI和Git CMD以及Git Bash：<a href="https://blog.csdn.net/weixin_36058293/article/details/94388387" target="_blank" rel="noopener">https://blog.csdn.net/weixin_36058293/article/details/94388387</a>）</p>
<p>step1：搭建Hexo环境<br>在Git Bash中运行命令<code>npm install -g hexo-cli</code>。</p>
<p>step2：初始化hexo<br>在Git Bash中，进入想要存放博客内容的文件夹，依次运行<code>hexo init myblog</code>，<code>cd myblog</code>，<code>npm install</code>（myblog是我想要存放内容的文件夹名，是Hexo初始化文件的路径， 即<strong>站点目录</strong>）。</p>
<p>-遇到问题：在git bash中输入<code>$hexo init myblog</code>后运行，报错提示&gt;<code>$</code>不是内部或外部命令，也不是可运行的程序或批处理文件。<br>原因：<code>$</code> 是 Linux 下的提示符，相当于git命令行窗口的 <code>C:\Users\Administrator&gt;</code><br>解决方法：在git bash中输入指令<code>hexo init myblog</code>（即不加<code>$</code>）</p>
<p>-遇到问题：<img src="https://upload-images.jianshu.io/upload_images/17593398-b25fcc29a7fce6a2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/540" alt="图片.png"><br>原因：所安装的node版本过老，需要更新node<br>解决方法：下载gnvm（下载链接：<a href="https://github.com/Kenshin/gnvm" target="_blank" rel="noopener">https://github.com/Kenshin/gnvm</a>），将下载好的gnvm.exe文件放到node的安装目录下（node的安装目录可以在命令行中运行<code>where node</code>指令获得），在命令行中运行<code>gnvm update latest</code>指令，然后运行<code>gnvm use 14.2.0</code>指令（这里的14.2.0是node的最新版本号，这条指令用来设置node当前使用版本），至此node版本更新完成。</p>
<p>补充：还有一条指令<code>gnvm install &lt;xxxx&gt;</code>用来安装指定版本的node，xxxx为所要安装的node版本号）</p>
<p>注意：windows下不能在git bash中直接运行<code>n stable</code>或者<code>n latest</code>来更新node，因为windows下没有n模块，不支持用这些指令</p>
<blockquote>
<p>附：<br>1.另一个用来管理node版本的工具nvmw，下载及使用链接：<a href="https://github.com/TimothyGu/nvmw" target="_blank" rel="noopener">https://github.com/TimothyGu/nvmw</a><br>2.window下使用nvmw控制nodejs的版本：<a href="https://www.jianshu.com/p/82c5f3a39559" target="_blank" rel="noopener">https://www.jianshu.com/p/82c5f3a39559</a><br>2.所有版本的node.js下载链接：<a href="https://nodejs.org/zh-cn/download/releases/" target="_blank" rel="noopener">https://nodejs.org/zh-cn/download/releases/</a></p>
</blockquote>
<p>step3：启动服务器<br>在Git Bash中运行<code>hexo server</code>指令。<br>然后在浏览器中打开 <a href="https://link.jianshu.com?t=http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a> （这是你的博客网址）查看属于你的第一份快乐。<br>按Ctrl+C可以停止运行。</p>
<p>至此，hexo博客本地搭建完成。</p>
<p>#将本地Hexo博客推送到GithubPages<br>（从这里开始用的是Git bash）<br>###1.配置GitHub账户信息<br>首先在GitHub中注册登录，并创建一个仓库（repository），命名为<code>&lt;GithubName&gt;.github.io</code>。<br>然后在Git bash中配置git用户名和邮箱，依次运行</p>
<figure class="highlight plain"><figcaption><span>config  --global user.name "你的github用户名"```</span></figcaption><table><tr><td class="code"><pre><span class="line">&#96;&#96;&#96;git config  --global user.email &quot;注册GitHub时用的邮箱&quot;</span><br></pre></td></tr></table></figure>
<p>###2.安装hexo-deployer-git插件<br>在Git Bash中运行命令<code>npm install hexo-deployer-git --save</code></p>
<p>###3.添加SSH key<br>SSH 为建立在应用层基础上的安全协议 ,利用SSH协议可以有效防止远程管理过程中的信息泄露问题。通过SSH可以对所有传输的数据进行加密，也能够防止DNS欺骗和IP欺骗。<br>ssh key让你方便的登录到 SSH 服务器，而无需输入密码。由于你无需发送你的密码到网络中，SSH 密钥对被认为是更加安全的方式。<br>ssh和ssh key的介绍：<a href="https://www.jianshu.com/p/1246cfdbe460" target="_blank" rel="noopener">https://www.jianshu.com/p/1246cfdbe460</a></p>
<p>step1：创建一个ssh key<br>在git bash中运行命令<code>$ ssh-keygen -t rsa -C &quot;邮箱地址&quot;</code>，回车三下。</p>
<p>step2：添加到Github<br>在上一步的运行结果中有一句<code>Your public key has been saved in  /c/Users/LENOVO/.ssh/id_rsa.pub</code>，按照这句话提供的路径找到id_rsa.pub文件，用记事本打开，复制内容。<br>在GitHub中，点击右上角头像——settings——SSH and GPG key——New SSH key，将id_rsa.pub文件的内容粘贴进去保存。</p>
<p>step3：测试是否添加成功<br>在git bash中运行命令<code>$ ssh -T git@github.com</code>，对于运行中出现的<code>Are you sure to continue connecting (yes/no)?</code>的问题，输入<code>yes</code>并回车继续运行。<br>最后返回<code>You&#39;ve successfully authentictated</code>即表示添加成功。</p>
<p>###3.修改_config.yml<br>_config.yml文件站点目录下。文件末尾修改为</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#  Deployment</span><br><span class="line">## Docs: https:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;deployment.html</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@github.com:&lt;Github账号名称&gt;&#x2F;&lt;Github账号名称&gt;.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>
<p>其中<code>&lt;Github账号名称&gt;</code>换成自己的Github账号。<br>###4.推送到GithubPages。<br>在Git Bash中依次输入以下命令，</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo g</span><br><span class="line">$ hexo d</span><br></pre></td></tr></table></figure>
<p>返回INFO Deploy done: git即成功推送。<br>补充：强烈建议了解一下hexo指令<a href="https://hexo.io/zh-cn/docs/commands.html" target="_blank" rel="noopener">https://hexo.io/zh-cn/docs/commands.html</a></p>
<p>遇到问题：运行<code>hexo d</code>时程序报错，<br><img src="https://upload-images.jianshu.io/upload_images/17593398-b20ead22cba01652.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/700" alt="图片.png"><br>原因：node版本太新<br>解决方法：用gnvm安装稍旧版本的node。</p>
<p>遇到问题：运行<code>hexo d</code>时报错，<br><img src="https://upload-images.jianshu.io/upload_images/17593398-02ae5f523e36a2f1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="运行hexo d一直出现的问题.png"><br>原因：github仓库的名字设置错了，设置成了<code>username</code><br>解决方法：将仓库名设置为<code>username.github.io</code>。</p>
<p>（呜呜呜呜呜呜呜，让我说让我说：今天是7.1号，这个问题我搞了半个多月，一直不明白到底是哪一步出现了问题，看了无数的网页和教程，经历了N次ssh key重置，无数次满怀希望地运行起<code>hexo clean</code>，<code>hexo g</code>，<code>hexo d</code>，然而一次又一次的<code>ERROR: Repository not found</code>用不变的姿态在我头顶浇下一瓢凉过一瓢的冷水，在这个过程里我要感谢Hexo默认主题中的index.html这个网页，让在未知的黑暗中灰头土脸摸爬滚打的弱小无助的我，在颤抖着双手敲下<code>http://localhost:4000</code>进入这个网址时总能看到“希望”他那模糊的身影。身为一个懒惰的胖废人不仅预习到了将来可能遇到的无数error和它们的解决方法，搞明白了一直拖延的github的使用方法，甚至还学习了一些git命令，然而却是愈发像一只无头苍蝇，在找错误的错误道路上越走越远……直到今天，亲爱的党99岁生日这天，我抱着不抛弃不放弃的精神，再次打开一个又一个网页学找问题的根源，终于被<img src="https://upload-images.jianshu.io/upload_images/17593398-9df59f7bf253ae7a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<p>（图片来源：<a href="https://www.cnblogs.com/kiscall/p/4741097.html" target="_blank" rel="noopener">https://www.cnblogs.com/kiscall/p/4741097.html</a>）这道耀眼的光透过我的眼睛直击我的心灵，使我顿时耳清目明，茅塞顿开，打通任督二脉，守得云开见月明（对不起我有点激动），总之，在颤抖着双手改完了仓库名后，我终于看到了这幅美丽的画面!<img src="https://upload-images.jianshu.io/upload_images/17593398-1df1592ad098e051.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>果然人都是要为自己的所作所为付出相应的代价的，我这就是因为一时的粗心大意铸成小错，结果花了百十倍的时间和精力去弥补，耽误了多少别的事情啊。<br>总之总之，走过路过的施主们，做事万万细心啊（双手合十，虔诚恳请.ing）</p>
<p>#更改主题<br>Hexo默认的主题是landscape，可以在<a href="https://hexo.io/themes/" target="_blank" rel="noopener">Hexo官网|主题</a>页面上下载自己喜欢的主题。</p>
<p>我选择的是Next主题，在Next官网 <a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="noopener">http://theme-next.iissnan.com/getting-started.html</a>有详细的使用方法。</p>
<p>下载完成后，更改站点目录下的配置文件<code>-config.yml</code>中的<code>theme:</code>后的内容为新主题的名称。在git bash中运行<code>hexo clean</code>，<code>hexo g</code>，<code>hexo d</code>，<code>hexo s</code>，即可查看更换主题后的本地博客（<a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a><br>）和GithubPage上的效果（<a href="https://<username>.github.io/" target="_blank" rel="noopener">https://<username>.github.io/</a><br>）。<br>注意：<code>theme:</code>后面有一个空格，留着它。</p>
<p>遇到问题：运行<code>hexo s --debug</code>时，出现警告<code>WARN  No layout: index.html</code>，访问<a href="http://localhost:4000，网页无显示">http://localhost:4000，网页无显示</a><br>原因：下载主题时，指令<code>git clone https://github.com/iissnan/hexo-theme-next themes/next</code>时，themes/next误拼写成了theme/next。<br>解决方法：重新输入正确的命令运行</p>
<p>遇到问题：下载主题时报错<code>error: RPC failed; curl 18 transfer closed with outstanding read data remaining</code><br>原因：网速过慢<br>解决方法：等网络好时再下载</p>
<p>遇到问题：更换主题后网站显示空白<br>原因：下载主题时网络不好导致下载的next主题文件夹内容不全<br>解决方法：重新下载主题，下载完成后next文件夹下的目录如下：<br><img src="https://upload-images.jianshu.io/upload_images/17593398-5072c740aceef662.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<p>遇到问题：更换主题后，运行<code>hexo s</code>，报错<code>Error: Cannot find module &#39;hexo-util&#39;</code><br>原因：未安装<code>hexo-util</code><br>解决方法：gitbash中运行指令<code>npm install hexo-util --save</code></p>
<p>#主题配置<br>1.更换背景<br>将背景图片放在主题文件夹的images文件夹里（路径如<code>...\themes\next\source\images\background.png</code>），打开<code>...\themes\next\source\css\_custom</code>目录下的<code>custom.styl</code>文件，添加如下代码：</p>
<blockquote>
<p>body{<br>    background:url(/images/background.png);<br>    background-size:cover;<br>    background-repeat:no-repeat;<br>    background-attachment:fixed;<br>    background-position:center;<br>}</p>
</blockquote>
<p>Gitbash中运行<code>hexo clean</code>，<code>hexo g</code>，更换背景图完成。<br>2.静态资源压缩<br>在站点目录下运行<code>$ npm install gulp -g</code><br>未完待续……</p>
<p>主要参考教程：<a href="https://www.simon96.online/2018/10/12/hexo-tutorial/" target="_blank" rel="noopener">https://www.simon96.online/2018/10/12/hexo-tutorial/</a></p>
]]></content>
      <tags>
        <tag>博客搭建</tag>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/07/21/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
<!-- 来必力City版安装代码 -->
<div id="lv-container" data-id="city" data-uid="MTAyMC81MTI1Ny8yNzczOA==">
<script type="text/javascript">
   (function(d, s) {
       var j, e = d.getElementsByTagName(s)[0];

<pre><code>if (typeof LivereTower === &apos;function&apos;) { return; }

j = d.createElement(s);
j.src = &apos;https://cdn-city.livere.com/js/embed.dist.js&apos;;
j.async = true;

e.parentNode.insertBefore(j, e);</code></pre><p>   })(document, ‘script’);<br></script><br><noscript>为正常使用来必力评论功能请激活JavaScript</noscript></p>
</div>
<!-- City版安装代码已完成 -->
]]></content>
  </entry>
</search>
